name: Playwright Tests

on:
  push:
    branches: [ main ] # or your main branch
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '23.10.0' # Or your preferred Node.js version
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test --reporter=line,allure-playwright
    # - name: Install Allure Commandline
    #   run: npm install -g allure-commandline --save-dev
    - name: Generate Allure Report
      run: npx allure generate allure-results --clean -o allure-report
      if: always()
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report
      if: always() # Ensure upload even if tests fail
    # - name: Publish Test Results to GitHub Actions Summary
    #   uses: EnricoMi/publish-unit-test-result-action@v2
    #   if: always() # IMPORTANT: Run this step even if tests fail
    #   with:
    #     files: |
    #       test-results/**/*.xml # Path to your JUnit XML file
    #     check_name: Test Results Summary # The name that will appear in the Checks/Summary tab
    #       # optional: fail_on_test_failures: true # Uncomment if you want this step to fail the workflow on test failures
